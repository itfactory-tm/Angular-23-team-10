apiVersion: apps/v1
kind: Deployment
metadata:
  name: sql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sql
  template:
    metadata:
      labels:
        app: sql
    spec:
      containers:
        - name: sql-server
          image: mcr.microsoft.com/mssql/server:2022-latest
          ports:
            - containerPort: 1433
          env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: SA_PASSWORD
              value: myStong_Password123#

apiVersion: v1
kind: Service
metadata:
  name: sql-service
spec:
  selector:
    app: sql
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
  type: ClusterIP


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mysql
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mongodb-pvc


apiVersion: apps/v1
kind: Deployment
metadata:
  name: tripplanner-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tripplanner-api
  template:
    metadata:
      labels:
        app: tripplanner-api
    spec:
      containers:
      - name: tripplanner-api
        image: your-registry/tripplannerapi:latest
        ports:
        - containerPort: 80
        env:
        # Add your environment variables here
---
apiVersion: v1
kind: Service
metadata:
  name: tripplanner-api-service
spec:
  selector:
    app: tripplanner-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer  # or NodePort depending on your environment

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
